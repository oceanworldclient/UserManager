@page "/Register"
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject ManageClient ManageClient;

<MCard Width="510" Height="680" Class="mx-auto my-auto" Style="height: calc(100% - 96px);">
    <div class="mt-2 mx-auto text-center" style="width: 420px;">
        <h3 class="mt-2 mb-12">注册</h3>
        <MTextField TValue="string"
                    Label="Email"
                    Placeholder="Email"
                    Outlined
                    HideDetails="@("auto")"/>
        <MTextField TValue="string"
                    Class="mt-10"
                    Label="Password"
                    Type="@(_show ? "text":"password")"
                    Placeholder="Password"
                    AppendIcon="@(_show?"mdi-eye" : "mdi-eye-off")"
                    OnAppendClick="()=>_show = !_show"
                    Outlined="true"
                    HideDetails="@("auto")"/>
        
        <MButton Class="mt-11 rounded-4 text-btn white--text" OnClick="RegisterAction" Height=46 Width=340 Color="primary" Disabled="@(!_isRegistering)">
            @if (!_isRegistering)
            {
                <text>注册</text>
            }
            else
            {
                <MProgressCircular Size="30" Indeterminate Color="primary"></MProgressCircular>
            }

        </MButton>
                                                        
    </div>
</MCard>


@code {

    private readonly RegisterModel _registerModel = new();

    private bool _show;

    private bool _isRegistering = false;
    

    private async void RegisterAction()
    {
        _isRegistering = true;
        var registerResult = await ManageClient.Register(_registerModel);
        if (registerResult.Successful)
        {
            NavigationManager.NavigateTo("/Login");
        }
        else
        {
            
        }
        _isRegistering = false;
    }

}