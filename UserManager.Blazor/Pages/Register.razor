@page "/Member/Register"
@using UserManager.Blazor.Services
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<MCard Width="510" Height="680" Class="mx-auto my-auto" Style="height: calc(100% - 96px);">
    <div class="mt-2 mx-auto text-center" style="width: 420px;">
        <h3 class="mt-2 mb-12">注册</h3>
        <MTextField TValue="string"
                    Label="Name"
                    Placeholder="Name"
                    @bind-Value="_registerModel.Name"
                    Outlined
                    HideDetails="@("auto")"/>
        <MTextField TValue="string"
                    Label="Email"
                    Class="mt-10"
                    Placeholder="Email"
                    @bind-Value="_registerModel.Email"
                    Outlined
                    HideDetails="@("auto")"/>
        <MTextField TValue="string"
                    @bind-Value="_registerModel.Password"
                    Class="mt-10"
                    Label="Password"
                    Type="@(_show ? "text" : "password")"
                    Placeholder="Password"
                    AppendIcon="@(_show ? "mdi-eye" : "mdi-eye-off")"
                    OnAppendClick="() => _show = !_show"
                    Outlined="true"
                    HideDetails="@("auto")"/>
        <MTextField TValue="string"
                    @bind-Value="_registerModel.ConfirmPassword"
                    Class="mt-10"
                    Label="Confirm Password"
                    Type="@(_show ? "text" : "password")"
                    Placeholder="Password"
                    AppendIcon="@(_show ? "mdi-eye" : "mdi-eye-off")"
                    OnAppendClick="() => _show = !_show"
                    Outlined="true"
                    HideDetails="@("auto")"/>

        <MButton Class="mt-11 rounded-4 text-btn white--text" OnClick="RegisterAction" Height=46 Width=340 Color="primary" Disabled="_isLoading" Loading="_isLoading">注册</MButton>
    </div>
</MCard>
<Snackbar @ref="_snackbar"/>


@code {

    private readonly RegisterModel _registerModel = new();

    private bool _show;

    private bool _isLoading = false;

    private Snackbar? _snackbar;


    private async void RegisterAction()
    {
        _isLoading = true;
        var result = await AuthService.Register(_registerModel);
        if (result.Successful)
        {
            NavigationManager.NavigateTo("/Login");
        }
        else
        {
            _snackbar?.Show(string.Join(",", result.Errors));
            _isLoading = false;
            StateHasChanged();
        }
    }

}