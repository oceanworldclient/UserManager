@using UserManager.Blazor.Client
@inject ManageClient ManageClient

<MDialog @bind-Value="_open" Scrollable="false" MaxWidth="600">
    <ChildContent>
        <MCard>
            <MCardTitle Class="text-h5">
                修改用户密码
            </MCardTitle>
            <MCardSubtitle>
                @_userDto.Email
            </MCardSubtitle>
            <MDivider/>
            <MCardText>
                <MListItem Dense="true">
                    <MTextField TValue="string" @bind-Value="_password" HideDetails="true"></MTextField>
                </MListItem>
            </MCardText>
            <MCardActions>
                <MButton Color="red darken-1" Text="true" OnClick="@(() => _open = false)">Cancel</MButton>
                <MButton Color="green darken-1" Text="true" OnClick="Confirm">Save</MButton>
            </MCardActions>
        </MCard>
    </ChildContent>
</MDialog>


@code {

    private bool _open;

    private string _password = "";

    private UserDto _userDto;

    private Action<string, UserDto, bool>? _callback;

    public void Show(UserDto userDto, Action<string, UserDto, bool>? callback = null)
    {
        _open = true;
        _userDto = userDto;
        _callback = callback;
        StateHasChanged();
    }

    private async void Confirm()
    {
        if (!string.IsNullOrEmpty(_password))
        {
            var request = new ModifyPasswordDto() { UserId = _userDto.Id, UserEmail = _userDto.Email, NewPassword = _password, Website = _userDto.Website };
            var saveUser = await ManageClient.ModifyPassword(request);
            _callback?.Invoke(saveUser ? "修改成功" : "修改失败", _userDto, false);
        }
        _open = false;
        StateHasChanged();
    }

}