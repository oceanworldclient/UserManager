@inject ManageClient ManageClient
@inject Notify Notify

<Modal ConfirmLoading="_loading" Title="修改邀请人" Visible="_visible" OnCancel="() => _visible = false" OnOk="OnSave">
    <Card Title="@_user.Email">
        <ChildContent>
            <AntDesign.Input TValue="string" @bind-Value="@_refByEmail"/>
        </ChildContent>
    </Card>
</Modal>


@code {

    private UserDto _user = new();

    private bool _loading;

    private bool _visible;

    private string _refByEmail = "";

    private Action? _callback;

    public void Show(UserDto userDto, Action? action)
    {
        _user = userDto;
        _callback = action;
        _visible = true;
        StateHasChanged();
    }

    private async void OnSave()
    {
        if (string.IsNullOrWhiteSpace(_refByEmail))
        {
            Notify.NoticeWithIcon("Warn", "邀请人邮箱不能为空", NotificationType.Warning);
            return;
        }

        _loading = true;
        var request = new ModifyRefByDto() { UserId = _user.Id, UserEmail = _user.Email, RefBy = _refByEmail, Website = _user.Website };
        var res = await ManageClient.ModifyRefBy(request);
        _loading = false;
        if (!res.IsSuccess)
        {
            Notify.NoticeWithIcon("Error", res.Message ?? "修改邀请人失败", NotificationType.Error);
            StateHasChanged();
            return;
        }
        Notify.NoticeWithIcon("Error", "修改邀请人成功", NotificationType.Success);
        _callback?.Invoke();
        _visible = false;
        StateHasChanged();
    }

}